"use strict";

// let x = 5; alert( x++ ); // =5, если поставить ++х - будет 6

// [ ] + false - null + true
// console.log([] + false - null + true); NaN

// let y = 1; 
// let x = y = 2; 
// alert(x); // результат - 2, последовательное присваивание

// console.log([ ] + 1 + 2); // пустой массив конкатенируется с 1 и далее 1 конкатенируется с 2
// итог будет 12 так как конкатенируются просто два числа 1 и 2 = 12

// alert( "1"[0] ); Итог - 1

// console.log(2 && 1 && null && 0 && undefined); // null - потому что 2 это правдивое выражение как и 1, 
// а null в логическом контексте это ложное выражение, в итоге всё упирается и далее код уже не идет оставляя итог null
// && - логические оператор И
// И запинается на лжи (ложном выражении, как с null)

// console.log(!!(1 && 2) === (1 && 2)); // выражения не равны, так как двойное отрицание !! превращает следующее
// значение в boolean и значит оно не будет равно следующему значению

// alert (null || 2 && 3 || 4); // Приоритет будет в &&, и только потом проверяется || 2&&3 = 3
// Если И (&&) упирается на лжи, то ИЛИ (||) упирается на первой правде
// || упирается на первой правде, а значит из решения null || 2 && 3 мы получим 3, так как это первое правдивое значение
// 3 || 4 здесь будет 3. 3 - это первое правдивое значение и || будет всегда выводить первое правдивое выражение

// const a = [1, 2, 3]; 
// const b = [1, 2, 3];
// console.log(b === b); // они не равны, так как массивы сравниваются не по значению внутри, а по оператору
// оператор a и b разные, отсюда мы и получаем false. 

// alert( +"Infinity"); // Здесь будет тип данных число, так как у нас перед "Inf" стоит унарный плюс,
// который всё преобразует в тип данных число (number)

// console.log("Ёжик" > "яблоко"); // False так как строки сравнивают по символам юникода
// console.log("заяц" == "заяц"); // Второй пример, где все символы совпадают, значит строки равны

// console.log(0 || "" || 2 || 3 || true || 5); // || упирается в правду, а 0 это false, "" - тоже false
// а 2 это правда в логическом контексте, значит || на нем упирается и далее у нас всё будет упираться в правдивое
// значение 2
