'use strict';

// Первый атрибут - defer

// <script> defer src="blablabla"</script> Что нам дает defer?
// этот атрибут сообщает браузеру что он должен продолжать обрабатывать страницу 
// и загружать скрипт выше в фоновом режиме, а замтем запустить скрипт когда он загрузится

// скрипты defer никогда не блокируют страницу. Скрипты с этим атрибутом выполняются когда
// наше DOM-дерево уже готово. Теперь этот скрипт можно поместить в head в HTML структуре.
// Если у нас не один скрипт, а еще несколько то они благодаря defer будут загружаться последовательно.
// Один недостаток, если первый скрипт большой, а второй маленький. То второй будет ждать выполнения большого.

// Для чего я могу это использовать? - так соблюдается порядок выполнения всех подключенных утилит
// и мы точно уверены что страница готова


// Второй атрибут - async

// При async в структуре <script></script> будет выполняться первым тот скрипт который первый загрузился
// они независимы друг от друга и если первый скрипт больше второго. То вероятнее всего второй закгрузится первым.


// Можно создать script через js, пример ниже

const script = document.createElement('script'); // создам структуру
script.src = "js/test"; // создаем src
script.async = false; // отключили async, чтобы скрипт грузился как обычно
document.body.append(script); // Помещаем на страницу (в HTML)

// Реальный пример ниже

function loadScript(src) {
    const script = document.createElement('script');
          script.src = src; 
          script.async = false; 
          document.body.append(script);
}

loadScript("js/test/js");
loadScript("js/test/some");